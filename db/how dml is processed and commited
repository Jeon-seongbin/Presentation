#DML 프로세스

1. 쿼리가 실행되면 SGL영역을 탐색한다
  + 이전에 실행한 같은 쿼리가 있는지 없는지 탐색
  + 있으면 같은 쿼리를 파싱 할 필요가 없다
  
2. 데이터 딕셔너리 영역 탐색
  + 관련 테이블 정보가 있으면 테이블의 권한이라 정의를 가졀 올 필요가 없다
  + 만약 데이터가 없으면 디스크에서 반환되어 이들 영역에 기록한다
3. 버퍼 캐시에서 관련 데이터 및 undo 세그먼트를 검사한다
  + 수정해야 할 데이터가 버퍼 캐시에 없는경우 서버는 디스크에서 이러한 데이터를 가져와 버퍼 캐시에 기록한다
  + 관련 데이터가 버퍼 캐시에 있는지 확인한 후 다른 사용자에 대해 관련 블록을점근다
  + 커밋하거나 롤백 하기 전 까지 이 블록을 변경 할 수없다
  + 모든 변경사항은 버퍼 캐시의 관련 블록에 기록된다
    * 쓰여진 블록을 더티 블록 
4. redo 로그 생성한다 (다운이 되었고 복구를 할 때 다시 하라는 로그를 생성)
5. 서버는 수정한 줄 수를 사용자에게 반환한다
6. 유저는 자신의 트랜잭션에서 수정작업을 계속해서 할 수 있다


redo 로그 버퍼는 변경 사항을 redo 로그 파일에 기록하는 동안 SCN(시스템 변경 번호)을 할당한다.

시스템 변경 번호는 해당 날짜의 타임스탬프를 포함한 고유 번호다.

그래서 서버는 redo 로그 버퍼에 현재 시스템 변경 번호로 커밋 레코드를 만든다.

그런 다음 로그 기록기 프로세스는 방금 만든 레코드를 redo 로그 파일에 커밋하는 등 관련 작업에 대해 지금까지 생성된 모든 redo 로그 버퍼 항목을 쓰기 시작한 다음 redo 로그 버퍼에서 삭제한다.

그런 다음, 데이터베이스 작성기 프로세스는 디스크에 더티 블록을 기록하고 서버는 다른 사용자를 위해 관련 블록을 잠금 해제한다.

이 모든 것을 완료한 후, 서버는 트랜잭션의 완료에 대한 피드백을 사용자에게 반환한다.

따라서 커밋이 성공적으로 수행되면 트랜잭션이 완료되고 다음 DML 작업으로 다른 트랜잭션을 시작하게 된다.
