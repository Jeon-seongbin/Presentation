쿠버네티스 2강 

https://docs.google.com/presentation/d/1FVHcAkjbiOWt7wozXfVl8Da9m9NgHSeZ85PznVKIo0w/edit#slide=id.g5202183cf3_3_4

명령어 정리
    개행하고 적어놓은 영어는 각각 코세라 강의와 홈페이지 튜토리얼에서 첨부 한 것

    kubectl version
    버전확인

    kubectl cluster-info
    쿠버네티스 클러스터 버전확인

    source <(kubectl completion bash)
    자동완성하게 도와준다는커멘드

        Kubernetes comes with auto-completion.
        You can use the kubectl completion command and the built-in source command to set this up.

    kubectl run 디플로이먼트이름 --image=이미지이름
    새로운 nginx(런할 이미지 대상의 이름) pod(컨테이너의 집합체)와 디플로이먼트를 생성하고 실행시킨다
    '서비스는 만들지 않는다'
    --image=이미지 설정가능
    (아무런 설정이 안되있으면 기본적인 명령어가 적용되는것인지?)

        In Kubernetes, all containers run in pods.
        And in this command, Kubernetes created what is called a deployment behind the scenes,
        and runs a single pod with the nginx container in it. A deployment keeps a given number
        of pods up and running even when the nodes they run on fail. In this case, you run the 
        default number of pods, which is 1.

        kubectl run command. The run command creates a new deployment. We need to provide the 
        deployment name and app image location (include the full repository url for images 
        hosted outside Docker hub). We want to run the app on a specific port so we add 
        the --port parameter:

    kubectl proxy
    파드는 프라이빗 하고 폐쇄된 공간이라 proxy 명령어를 이용하여 바깥에서 접속 가능하다
    service가 expose공개 안되었을때 사용

    kubectl get (pods, deployments, services)
    pod, deployment, service 등 일반적인 정보를 얻는 명령어

    kubectl describe (pods, deployments, services)
    get 명령어에서 좀 더 자세한 정보를 얻는 명령어

    kubectl logs
    팟 안에서의 로그를 확인 할 수 있다(팟의 로그)

    kubectl expose deployment nginx --port 80 --type LoadBalancer
    디플로이먼트를 공개한다
    pod를 노드 상에 배치시키고 '서비스를 만들어서' '공개'시킨다
    사용자에게 트래픽을 받게 한다

        Use the kubectl expose command to expose the nginx container outside Kubernetes.
        Kubernetes created a service and an external load balancer with a public IP address attached to it
        (you will learn about services later). The IP address remains the same for the life of the service. 
        Any client who hits that public IP address (for example an end user or another container) is routed
        to pods behind the service. In this case, that would be the nginx pod.

    kubectl scale deployment 이미지이름 --replicas=유지 할 pod의 수
    Kubectl scale 명령 다음에 배포 유형, 이름 및 원하는 인스턴스 수를 사용합니다.

        Kubernetes supports an easy-to-use workflow out of the box using the kubectl run, expose, and scale commands.
        Explore the built-in pod documentation using the kubectl explain command.

    kubectl get pods -l label이름
    kubectl get service -l label이름
    -l 레이블 이름을 줌으로써 파드이름 대신 정보를 볼 수 있다
    
    kubectl delete service -l label 이름
    라벨이름 서비스 제거하기

    kubectl explain pods

        While you explore the Kubernetes API, kubectl explain will be one of the most common commands you use.
        Note how you used it above to investigate an API object and how you will use it below to check on various
        properties of API objects.
        팟에 대한 설명?

    kubectl explain pods.spec.containers

        Use the kubectl explain command with the .spec option to view more information about API objects.
        This example inspects containers.
        팟의 컨테이너 내용?

    kubectl create -f pods/monolith.yaml
    팟 만들기 

    kubectl discribe pods monolith
    팟을 실행하기?

    kubectl exec monolith --stdin --tty -c monolith /bin/sh
    팟안의 컨테이너의 커맨드 실행
