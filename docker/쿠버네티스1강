쿠버네티스 1강

    개념

    도커 1강에서 배웠듯이 도커만 설치되어 있으면
    어느 머신에라던지 각각의 이미지를 설치하여 컨테이너를 만드는 행위를 하면서 호스트 os 에 종속적이지 않는 장점을 가지고있다
    
    os 에 종속적이지 않고 소프트웨어 하드웨어 운영체제를 모듈로 분리 할 수 있다
    그리고 그것들은 즉석 실행 정지 가능하다

    그렇지만 컨테이너가 망가졌을 경우, 에러 났을 경우에는 대응을 못한다
    
    그래서 나온게 쿠버네티스
    
    컨테이너에서 에러가 났을때 장애대응 
    컨테이너 확장 갯수 확장방법
    배포방법 들을 정의하면서 장점을 기대할 수 있다

    master pod node 
    쿠버네티스 마스터 (kubectl로 조작한다)
    쿠버네티스 마스터는 클러스터의 모든 제어를 담당한다
    마스터는 애플리케이션을 스케줄링하거나, 애플리케이션의 항상성을 유지하거나, 애플리케이션을 스케일링하고,
    새로운 변경사항을 순서대로 반영하는 일과 같은 클러스터 내 모든 활동을 조율한다.
    컨테이너를 줄이거나 늘리거나

    pod
    컨테이너들의 그룹
    컨테이너들은 이하의 자원을 공유한다

    볼륨과 같은 공유 스토리지
    IP자원
    컨테이너 이미지 버전 포트, 동작방식에 대한 정보

    노드
    디플로이 되어 사용자에게 제공할 환경을 갖춘 실제 머신 (VM)
    노드는 구동되는 애플리케이션을 수용하는데 사용된다.
    각 노드에는 Docker rkt같은 컨테이너 작업을 처리하는 도구가 설치 되어 있어야 한다
    쿠버네티스가 컨테이너 디플로이먼트 도구이기 때문에?
    pod는 언제나 노드 상에서 동작한다
    
        Kubelet
        노드에는 큐블릿이라는걸 가지고 있는데 이것은 노드를 관리한다
        Kubelet이 노드에서 쿠버네티스 마스터와의 통신을 담당한다

    상용 클러스터를 구성하기 위해서는 노드가 3개 필요하다
